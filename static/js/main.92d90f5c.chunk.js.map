{"version":3,"sources":["App.js","index.js"],"names":["Homepage","About","useRouteMatch","url","path","to","Welcome","name","useParams","Contact","Navbar","className","ReactDOM","render","useState","isAuthenticated","setIsAuthenticated","exact","document","getElementById"],"mappings":"8OAcMA,EAAW,kBAChB,kBAAC,WAAD,KACC,2CAKIC,EAAQ,WAAM,MAEGC,cAAdC,EAFW,EAEXA,IAAKC,EAFM,EAENA,KAOb,OACC,kBAAC,WAAD,KACC,4BACC,4BACC,kBAAC,IAAD,CAAMC,GAAE,UAAKF,EAAL,WAAR,UAED,4BACC,kBAAC,IAAD,CAAME,GAAE,UAAKF,EAAL,aAAR,YAED,4BACC,kBAAC,IAAD,CAAME,GAAE,UAAKF,EAAL,YAAR,WAED,4BACC,kBAAC,IAAD,CAAME,GAAE,UAAKF,EAAL,aAAR,aAIF,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,KAAI,UAAKA,EAAL,WACV,kBAAC,EAAD,UAOCE,EAAU,WAAO,IACdC,EAASC,cAATD,KACR,OACC,kBAAC,WAAD,KACC,sCAAYA,KAMTE,EAAU,WACf,OACC,kBAAC,WAAD,KACC,8CAOGC,EAAS,WACd,OACC,kBAAC,WAAD,KACC,6BACC,wBAAIC,UAAU,oCACb,4BACC,kBAAC,IAAD,CAAMN,GAAG,KAAT,SAED,4BACC,kBAAC,IAAD,CAAMA,GAAG,UAAT,UAED,4BACC,kBAAC,IAAD,CAAMA,GAAG,YAAT,YAED,4BACC,kBAAC,IAAD,CAAMA,GAAG,WACR,gD,MCvFPO,IAASC,OAAO,mBDsGD,WAAyB,IAAD,EACUC,oBAAS,GADnB,mBAC9BC,EAD8B,KACbC,EADa,KAGtC,OACC,kBAAC,IAAD,KACC,kBAAC,EAAD,CAAQD,gBAAiBA,EAAiBC,mBAAoBA,IAC9D,8BACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOC,OAAK,EAACb,KAAK,KACjB,kBAAC,EAAD,OAEAW,EACA,kBAAC,WAAD,KACC,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOX,KAAK,UACX,kBAAC,EAAD,OAED,kBAAC,IAAD,CAAOA,KAAK,YACX,kBAAC,EAAD,OAED,kBAAC,IAAD,CAAOS,OAAQ,kBAAM,wDAIvB,kBAAC,WAAD,KACC,kBAAC,IAAD,CAAUR,GAAG,YC/HJ,MAASa,SAASC,eAAe,W","file":"static/js/main.92d90f5c.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport {\n\tBrowserRouter as Router,\n\tLink,\n\tRoute,\n\tSwitch,\n\tRedirect,\n\tuseParams,\n\tuseRouteMatch,\n\tuseLocation,\n\tuseHistory\n} from 'react-router-dom';\n\n// Home Page\nconst Homepage = () => (\n\t<Fragment>\n\t\t<h1>Home page</h1>\n\t</Fragment>\n);\n\n// About Page\nconst About = () => {\n\t// getting url and path dynamically instead of manually typing in <Link/> component\n\tconst { url, path } = useRouteMatch();\n\n\t// const name =  props.match.params.name\n\t// or by distructuring props as {match:{params:{name}}}\n\t// or by using react-router-dom hooks like below\n\t// Props or placeholder(:) can only be received by the component to which prop has been passed.\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to={`${url}/firoj`}>Firoj</Link>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to={`${url}/offrose`}>Offrose</Link>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to={`${url}/sakina`}>Sakina</Link>\n\t\t\t\t</li>\n\t\t\t\t<li>\n\t\t\t\t\t<Link to={`${url}/saharoj`}>Saharoj</Link>\n\t\t\t\t</li>\n\t\t\t</ul>\n\n\t\t\t<Switch>\n\t\t\t\t<Route path={`${path}/:name`}>\n\t\t\t\t\t<Welcome />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</Fragment>\n\t);\n};\n\nconst Welcome = () => {\n\tconst { name } = useParams();\n\treturn (\n\t\t<Fragment>\n\t\t\t<p>Welcome {name}</p>\n\t\t</Fragment>\n\t);\n};\n\n// Contact Page\nconst Contact = () => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<h1>Contact Page</h1>\n\t\t</Fragment>\n\t);\n};\n\n// Link is similar to <a> tag and to is similar to href attribute in html.\n\nconst Navbar = () => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<nav>\n\t\t\t\t<ul className=\"flex justify-around max-width-xl\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to=\"/\">Home</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to=\"/about\">About</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to=\"/contact\">Contact</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to=\"/signin\">\n\t\t\t\t\t\t\t<button>SignIn</button>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t</Fragment>\n\t);\n};\n\n// <BrowserRouter/> component needs monitors the route change\n// It is better to wrap all Routes with <Switch/> Component to ensure rendering of only one path (that which matches first) at a time in case more than one match found.\n// exact means full path need to be matched in order for the components to render\n// if no path attribute is set on Route compoenent, it is default for rendering no path is matched( useful in scenerio like page not found)\n// using children attribute, all the components' params cab accessed into the child component\n\nexport default function TurtorialApp() {\n\tconst [ isAuthenticated, setIsAuthenticated ] = useState(true);\n\n\treturn (\n\t\t<Router>\n\t\t\t<Navbar isAuthenticated={isAuthenticated} setIsAuthenticated={setIsAuthenticated} />\n\t\t\t<main>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<Homepage />\n\t\t\t\t\t</Route>\n\t\t\t\t\t{isAuthenticated ? (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route path=\"/about\">\n\t\t\t\t\t\t\t\t\t<About />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path=\"/contact\">\n\t\t\t\t\t\t\t\t\t<Contact />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route render={() => <h1>404: page not found</h1>} />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<Redirect to=\"/\" />\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t)}\n\t\t\t\t</Switch>\n\t\t\t</main>\n\t\t</Router>\n\t);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './css/framework/tailwind.custom.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}